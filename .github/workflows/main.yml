name: Foodgram workflow
on:
  workflow_dispatch:
  push:
    branches: [ master ]
jobs:
  tests:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4
      - name: Setup Python
        uses: actions/setup-python@v2.2.2
        with:
          python-version: 3.8
      - name: Install Dependencies
        run: | 
          # Обновление pip
          python -m pip install --upgrade pip 
          # Установка flake8 и его плагинов
          pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort
          # Установка зависимостей
          pip install -r backend/foodgram/requirements.txt
          # Установка шрифтов для fpdf
          wget -O temp.zip "https://github.com/reingart/pyfpdf/releases/download/binary/fpdf_unicode_font_pack.zip"
          unzip temp.zip -d /usr/local/lib/python3.8/site-packages/fpdf
      - name: Test with flake8 and django tests
        env: 
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
        run: |
          # Перейти в папку проекта
          cd backend/foodgram/
          # Запуск проверки проекта по flake8
          python -m flake8 
          # Запустить написанные разработчиком тесты
          pytest

  build_and_push_to_docker_hub:
    name: Build & push Docker image to DockerHub
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to Docker Hub
        uses: docker/build-push-action@v2
        with:
          context: backend/foodgram/
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/foodgram:latest

  deploy:
    name: Deploy to Running Server
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    steps:
      - name: Execute remote ssh commands to deploy
        uses: appleboy/ssh-action@v0.1.4
        with:
          host: ${{ secrets.WORK_SERVER_ADDRESS }}
          username: ${{ secrets.WORK_SERVER_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.WORK_SERVER_PASSPHRASE }}
          script: |
            touch .env
            cp /dev/null .env
            echo DEBUG=False >> .env
            echo SECRET_KEY=${{ secrets.SECRET_KEY }} >> .env
            echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
            echo DB_NAME=${{ secrets.DB_NAME }} >> .env
            echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
            echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
            echo DB_HOST=${{ secrets.DB_HOST }} >> .env
            echo DB_PORT=${{ secrets.DB_PORT }} >> .env
            echo DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }} >> .env

            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/foodgram:latest
            sudo docker-compose stop
            sudo docker-compose up -d --build

  send_message:
    name: Inform success
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Send to Telegram
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: ${{ github.workflow }} успешно выполнен!
